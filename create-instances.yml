---
- hosts:
  - 127.0.0.1
  connection: local
  gather_facts: False
  vars_files:
    - vars/ec2.yml
  tasks:
  - name: Lauch new EC2 instance
    local_action: ec2
      keypair={{ec2_keypair}}
      group={{ec2_security_group}}
      instance_type={{ec2_instance_type}}
      image={{ec2_image}}
      wait=true
      region=sa-east-1
    register: ec2 
  - name: Waiting for ssh service 
    shell: ssh-keyscan -t rsa,dsa {{ item.public_ip }} >> ~/.ssh/know_hosts
    with_items: ec2.instances
  - local_action: wait_for
      delay=10
      port=22
      state=started
      host={{ item.public_ip }}
      timeout=120
    with_items: ec2.instances
  - name: Register instance 
    local_action: add_host 
      hostname={{ item.public_ip }} 
      groupname=cloudexam-exam-created 
    with_items: ec2.instances

- hosts: cloudexam-exam-created
  user: "{{ ec2_user }}" 
  gather_facts: True
  vars_files:
    - vars/ec2.yml
    - vars/database.yml
  tasks:
  # - debug: var=hostvars
  # - debug: var=inventory_hostname
  - apt: 
       update_cache=yes
    sudo: true
  - name: Install git
    apt: 
       name=git
       state=present
    sudo: true 
  - name: Creating folder where project will be
    shell: mkdir ephemeral 
    args: 
      chdir: /
    sudo: true
  - name: Clonning repository
    git: 
      repo=https://github.com/cloudson/cloudexam-exam.git
      dest=/ephemeral/cloudexam-exam
    register: git
    sudo: true
  - name: Owner of cloudexam folder should be www-data
    shell: chown -R www-data:www-data * 
    args:
      chdir: /ephemeral
    sudo: true
  - name: Install apache2 
    apt:
      name=apache2
      state=present
    sudo: true
  - name: Create virtualhost file 
    shell: sed -i 's;yourdirectory;ephemeral\/cloudexam-exam;g' cloudexam-exam.conf
    args:
      chdir: /ephemeral/cloudexam-exam/docs
    sudo: true
  - shell: sed -i 's;yourdomain;cloudexam-exam.claudson.com.br;g' cloudexam-exam.conf
    args:
      chdir: /ephemeral/cloudexam-exam/docs
    sudo: true
  - shell: mv cloudexam-exam.conf /etc/apache2/sites-enabled/
    args:
      chdir: /ephemeral/cloudexam-exam/docs
    sudo: true
  - shell: chmod 0777 /etc/hosts
    sudo: true
  - shell: echo "127.0.0.1 cloudexam-exam.claudson.com.br" >> /etc/hosts
    sudo: true
  - shell: sed -i 's;None;All;g' /etc/apache2/apache2.conf
    sudo: true
  - shell: sed -i 's;denied;granted;g' /etc/apache2/apache2.conf
    sudo: true 
  - shell: cp settings.php.template settings.php
    args: 
      chdir: /ephemeral/cloudexam-exam/config
    sudo: true
  - shell: sed -i 's;db_name;{{ db_name }};g' settings.php 
    args: 
      chdir: /ephemeral/cloudexam-exam/config
    sudo: true
  - shell: sed -i 's;db_user;{{ db_user }};g' settings.php 
    args: 
      chdir: /ephemeral/cloudexam-exam/config
    sudo: true
  - shell: sed -i 's;db_host;{{ db_user }};g' settings.php 
    args: 
      chdir: /ephemeral/cloudexam-exam/config
    sudo: true
  - shell: sed -i 's;db_password;{{ db_password }};g' settings.php 
    args: 
      chdir: /ephemeral/cloudexam-exam/config
    sudo: true
  - name: Install php
    apt: 
      name=php5
      state=present
    sudo: true
  - apt:
      name=php5-mysql
      state=present
    sudo: true
  - name: Install composer dependencies 
    shell: curl -s http://getcomposer.org/installer | php
    args: 
      chdir: /home/ubuntu
  - shell: /home/ubuntu/composer.phar install 
    args:
      chdir: /ephemeral/cloudexam-exam
    sudo: true
  - name: Run server 
    shell: echo "{{ inventory_hostname }} cloudexam-exam.claudson.com.br" >> /etc/hosts 
  - shell: service apache2 restart
    sudo: true
  - name: install boto
    apt: 
      name=python-pip
      state=present
    sudo: true
  - shell: pip install boto
    sudo: true
  - name: Add DNS entry on Route53
    route53:
      aws_access_key={{ aws_access_key_id }}
      aws_secret_key={{ aws_secret_access_key }}
      command=create
      overwrite=yes
      type=A
      zone="claudson.com.br"
      record="cloudexam-exam.claudson.com.br"
      value={{ inventory_hostname }}
# @todo just add host on dns after everything is ok, fix /etc/hosts